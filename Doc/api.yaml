openapi: 3.0.3
info:
  title: WASAText
  description: "API's for WASA project: WASAText."
  version: 1.0.0

servers:
  - url: https://localhost:8080
    description: Ambiente locale per il backend.

# 2) Apply the security globally to all operations
security:
  - bearerAuth: [] # use the same name as above

######################################
# Operations to add:
#
# • doLogin(seeSimplifiedlogin) DONE
# • setMyUserName               (in corso)
# • getMyConversations
# • getConversation
# • sendMessage
# • forwardMessage
# • commentMessage
# • uncommentMessage
# • deleteMessage
# • addToGroup
# • leaveGroup
# • setGroupName
# • setMyPhoto
# • setGroupPhoto
#
######################################

paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |
        Se l'utente non esiste, viene creato e viene restituito un identificatore univoco.
        Se l'utente esiste, l'identificatore viene restituito.
      operationId: doLogin
      requestBody:
        description: Dettagli dell'utente per il login
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Maria
                  pattern: 'ˆ.*?$'
                  minLength: 3
                  maxLength: 16
      responses:
        '201':
          description: Login effettuato con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                    description: Identificatore univoco dell'utente.
                    example: "abcdef012345"

  /user/{userId}/name:
    put:
      tags: ["user"]
      summary: Update user's name
      description: |
        Permette all'utente autenticato di aggiornare il proprio nome.
        Il nuovo nome deve essere unico e rispettare i criteri di validità.
      operationId: setMyUserName
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "abcdef012345"
          description: Identificatore univoco dell'utente.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newName:
                  type: string
                  description: Il nuovo nome dell'utente.
                  example: "JohnDoe"
                  minLength: 3
                  maxLength: 16
      responses:
        '200':
          description: Nome utente aggiornato con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User name updated successfully."
        '400':
          description: Nome non valido o già in uso.
        '401':
          description: Utente non autenticato.

  /user/{userId}/conversations:
    get:
      tags: ["conversations"]
      summary: Retrieve user's conversations
      description: |
        Recupera la lista delle conversazioni dell'utente autenticato,
        ordinate in ordine cronologico inverso.
      operationId: getMyConversations
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "abcdef012345"
          description: Identificatore univoco dell'utente.
      responses:
        '200':
          description: Lista delle conversazioni recuperata con successo.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    conversationId:
                      type: string
                      description: ID della conversazione.
                      example: "conv123"
                    name:
                      type: string
                      description: Nome dell'utente o del gruppo.
                      example: "Group Chat"
                    photo:
                      type: string
                      description: URL della foto del profilo o del gruppo.
                      example: "https://example.com/photo.jpg"
                    lastMessage:
                      type: string
                      description: Snippet dell'ultimo messaggio.
                      example: "See you tomorrow!"
                    timestamp:
                      type: string
                      format: date-time
                      description: Data e ora dell'ultimo messaggio.
                      example: "2024-12-12T15:30:00Z"
        '401':
          description: Utente non autenticato.

  /conversation/{conversationId}:
    get:
      tags: ["conversations"]
      summary: Retrieve messages in a conversation
      description: |
        Recupera tutti i messaggi di una conversazione specifica
        appartenente all'utente autenticato, ordinati in ordine cronologico inverso.
      operationId: getConversation
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: string
            example: "conv123"
          description: ID della conversazione.
      responses:
        '200':
          description: Messaggi della conversazione recuperati con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        sender:
                          type: string
                          description: Username del mittente.
                          example: "Maria"
                        content:
                          type: string
                          description: Contenuto del messaggio.
                          example: "Hello, how are you?"
                        timestamp:
                          type: string
                          format: date-time
                          description: Timestamp del messaggio.
                          example: "2024-12-12T15:31:00Z"
                        status:
                          type: string
                          description: Stato del messaggio (es. "delivered", "read").
                          example: "read"
        '404':
          description: Conversazione non trovata.
        '401':
          description: Utente non autenticato.

  /user/{userId}/photo:
    put:
      tags: ["user"]
      summary: Update user's profile photo
      description: |
        Permette all'utente autenticato di aggiornare la propria foto profilo
        fornendo un URL valido.
      operationId: setMyPhoto
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "abcdef012345"
          description: Identificatore univoco dell'utente.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoUrl:
                  type: string
                  description: URL della nuova foto profilo.
                  example: "https://example.com/newphoto.jpg"
      responses:
        '200':
          description: Foto profilo aggiornata con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Profile photo updated successfully."
        '400':
          description: URL non valido.
        '401':
          description: Utente non autenticato.



components:
  parameters: 
    userId:
      name: userId
      in: path
      required: true
      description: The user id
      schema:
        type: string
        example: "abcdef012345"
  schemas:
    username:
      type: object
      properties:                
        name:
          type: string
          example: Petrons01
          pattern: 'ˆ.*?$'
          minLength: 3
          maxLength: 15
  responses:
    requestIssues:
      description: Request issues
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
